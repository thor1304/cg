#include <graphics.h>
#include <iostream>
using namespace std;
void scanlineFill(int vertices[][2], int n) {
    int i, j, k, temp;
    int x[20], y[20], ymax = 0, ymin = 480;
       for (i = 0; i < n; i++) {
        if (vertices[i][1] > ymax) ymax = vertices[i][1];
        if (vertices[i][1] < ymin) ymin = vertices[i][1];
    }    
    for (int y = ymin; y <= ymax; y++) {
        int xi[20], k = 0;        
        for (i = 0; i < n; i++) {
            j=(i+1)%n;
            if ((vertices[i][1] <= y && vertices[j][1] > y) || (vertices[j][1] <= y && vertices[i][1] > y)) {
                xi[k++] = vertices[i][0] + (y - vertices[i][1]) * (vertices[j][0] - vertices[i][0]) / (vertices[j][1] - vertices[i][1]);
            }
        }        
        for (i = 0; i < k - 1; i++) {
            for (j = 0; j < k - 1 - i; j++) {
                if (xi[j] > xi[j + 1]) {
                    temp = xi[j];
                    xi[j] = xi[j + 1];
                    xi[j + 1] = temp;
                }
            }
        }
        for (i = 0; i < k; i += 2) {
            line(xi[i], y, xi[i + 1], y);
            delay(10);
        }
    }
}

int main() {
    int gd = DETECT, gm;
    initgraph(&gd, &gm, (char*)""); 
	setbkcolor(LIGHTGRAY);
	cleardevice();   
	int n=7;
    int vertices[n][2] = {
         {100, 200}, {250, 100}, {400, 200}, {300, 300},
		  {200, 300}, {250, 250}, {100,200}
    };
    setcolor(BLACK);  
    drawpoly(n, (int*)vertices);   
    setcolor(CYAN);
	getch(); 
    scanlineFill(vertices, n);
    getch();
    closegraph();
    return 0;
}
